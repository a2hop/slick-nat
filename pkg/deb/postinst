#!/bin/bash

set -e

PACKAGE_NAME="slick-nat"
PACKAGE_VERSION="0.0.3"
MODULE_NAME="slick_nat"
MODULES_LOAD_CONFIG="/etc/modules-load.d/slick-nat.conf"

case "$1" in
    configure)
        echo "Configuring slick-nat-dkms..."
        
        # Add to DKMS
        echo "Adding module to DKMS..."
        dkms add -m "${PACKAGE_NAME}" -v "${PACKAGE_VERSION}" || true
        
        # Build the module
        echo "Building module for current kernel..."
        if dkms build -m "${PACKAGE_NAME}" -v "${PACKAGE_VERSION}"; then
            echo "Module built successfully"
            
            # Install the module
            echo "Installing module..."
            if dkms install -m "${PACKAGE_NAME}" -v "${PACKAGE_VERSION}"; then
                echo "Module installed successfully"
                
                # Create modules-load.d configuration for autoloading
                echo "Setting up automatic module loading..."
                echo "${MODULE_NAME}" > "${MODULES_LOAD_CONFIG}"
                echo "Module will be loaded automatically on boot"
            else
                echo "Warning: Module installation failed"
                echo "You may need to install kernel headers:"
                echo "  sudo apt install linux-headers-\$(uname -r)"
            fi
        else
            echo "Warning: Module build failed"
            echo "Please check that you have:"
            echo "  1. Kernel headers installed: sudo apt install linux-headers-\$(uname -r)"
            echo "  2. Build tools installed: sudo apt install build-essential"
            echo "  3. DKMS installed: sudo apt install dkms"
        fi
        
        # Load the module if build was successful
        if dkms status | grep -q "${PACKAGE_NAME}.*installed"; then
            echo "Loading module..."
            modprobe "${MODULE_NAME}" || true
            
            # Check if module loaded
            if lsmod | grep -q "${MODULE_NAME}"; then
                echo "Module loaded successfully"
                
                # Setup configuration
                echo "Setting up configuration..."
                
                # Create slnat.conf from template if it doesn't exist
                if [ ! -f "/etc/slnat/slnat.conf" ]; then
                    echo "Creating default configuration file..."
                    cp "/etc/slnat/slnat.conf.template" "/etc/slnat/slnat.conf"
                    echo "Configuration template created at /etc/slnat/slnat.conf"
                    echo "Please edit this file to configure your NAT mappings"
                fi
                
                # Enable systemd service
                if command -v systemctl >/dev/null 2>&1; then
                    echo "Enabling slnat service..."
                    systemctl daemon-reload
                    systemctl enable slnat.service || true
                    echo "Service enabled - routes will be loaded automatically on boot"
                    echo "To load routes now: systemctl start slnat"
                fi
                
                echo ""
                echo "Usage:"
                echo "  Configure NAT: slnat <interface> add <internal_prefix> <external_prefix>"
                echo "  List mappings: slnat <interface> list"
                echo "  Check status: slnat status"
                echo "  Manage autoload: slnat autoload {enable|disable|status}"
                echo ""
                echo "Configuration:"
                echo "  Edit /etc/slnat/slnat.conf to configure automatic route loading"
                echo "  Run /etc/slnat/load-routes.sh to load routes manually"
                echo "  Use 'systemctl start slnat' to load routes via systemd"
            else
                echo "Module built but failed to load"
            fi
        fi
        ;;
        
    abort-upgrade|abort-remove|abort-deconfigure)
        ;;
        
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
        ;;
esac

exit 0
